---
// Kevin Powell's Modal tutorial
// https://www.youtube.com/watch?v=TAB_v6yBXIE

import { Icon } from "astro-icon/components";

type Props = {
  modalClass: string;
  openButtonClass?: string;
  closeButtonClass?: string;
};

const { modalClass, openButtonClass, closeButtonClass, ...rest } = Astro.props;
---

<button class:list={["openButton", openButtonClass]} {...rest}>
  <slot name="button-content" />
</button>

<dialog class:list={[`modal`, modalClass]}>
  <slot />
  <button class:list={[`closeButton`, closeButtonClass]}>
    <Icon name="tabler:x" />
  </button>
</dialog>

<script
  is:inline
  define:vars={{ modalClass, openButtonClass, closeButtonClass }}
>
  const openButton = document.querySelector(`.openButton`);
  const closeButton = document.querySelector(`.closeButton`);
  const modal = document.querySelector(`.modal`);

  const closeModal = () => {
    modal.setAttribute("closing", "");
    modal.addEventListener(
      "animationend",
      () => {
        modal.close();
        modal.removeAttribute("closing");
      },
      { once: true }
    );
  };

  openButton.addEventListener("click", () => {
    modal.showModal();
  });

  closeButton.addEventListener("click", () => {
    closeModal();
  });

  modal.addEventListener("click", (e) => {
    if (e.target.nodeName !== "DIALOG") return;
    closeModal();
  });
</script>

<style>
  .openButton {
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  .modal {
    opacity: 0;
    translate: 0 -1em;
    background: transparent;
    box-shadow:
      0 3px 5px -2px hsl(220 40% 2% / calc(10% + 3%)),
      0 7px 14px -5px hsl(220 40% 2% / calc(10% + 5%)),
      0 0 0 100vw hsl(0 0 0 / 0.5);

    transition:
      opacity 0.5s,
      translate 0.5s,
      overlay 0.5s allow-discrete,
      display 0.5s allow-discrete;

    &::backdrop {
      background: hsl(0 0% 0% / 0.5);
      opacity: 0;
    }
  }

  .modal[open] {
    animation:
      fadeIn 0.3s forwards,
      enter 0.3s forwards;

    /* &::backdrop {
      opacity: 1;
      animation: fadeIn 0.3s forwards;
    } */
  }

  .modal[closing] {
    display: block;
    inset: 0;
    animation: fadeOut 0.3s forwards;
    pointer-events: none;

    /* &::backdrop {
      animation: fadeOut 0.3s forwards;
    } */
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fadeOut {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes enter {
    0% {
      transform: translateY(10%);
    }
    100% {
      transform: translateY(0%);
    }
  }
</style>
