---
import FullScreenLayout from "../layouts/FullScreenLayout.astro";

type Role = {
  title: string;
  company: string;
  date: string;
  url: string;
  description: { type: string; text: string }[];
  technology: string[];
};

const roles: Role[] = [
  {
    title: "Developer",
    company: "Flocknote",
    date: "2022 - Present",
    url: "https://flocknote.com",
    description: [
      {
        type: "summary",
        text: "I build complex, but easy to use interfaces for a leading church management software company.",
      },
      {
        type: "detail",
        text: "While I work throughout our codebase, I regularly work on payments related features and get tasked with jumping in for emergency situations.",
      },
    ],
    technology: [
      "Javascript",
      "React",
      "Styled Components",
      "Framer Motion",
      "React Query",
      "React Hook Form",
      "React Testing Library",
    ],
  },
  {
    title: "Senior Application Developer",
    company: "NCF",
    date: "2021 - 2022",
    url: "https://ncfgiving.com",
    description: [
      {
        type: "detail",
        text: "Massively improved developer experience by refactoring legacy software to bundle Javascript with webpack, making it easier to develop and navigate the codebase",
      },
      {
        type: "detail",
        text: "Improved mobile responsiveness for the primary client facing application",
      },
      {
        type: "detail",
        text: "Built proof-of-concent app for moving a legacy portal application from jQuery to Remix",
      },
    ],
    technology: ["Javascript", "React", "Remix", "Webpack"],
  },
  {
    title: "Software Developer",
    company: "With One Vision",
    date: "2018 - 2021",
    url: "https://withone.vision",
    description: [
      {
        type: "summary",
        text: "Designed, developed, and maintained church management software.",
      },
      {
        type: "detail",
        text: "Replaced a legacy application with React and Material UI to manage the writing, approving, and sending of 1,000,000 texts and emails per year.",
      },
      {
        type: "detail",
        text: "Designed and built an internal staff site for the sharing and requesting of resources with React and Form.io",
      },
      {
        type: "detail",
        text: "Led the implementation of notifications and universal links in our React Native app.",
      },
      {
        type: "detail",
        text: "Partnered with a coworker to develop the table structures and API endpoints for a contact management feature in our mobile app using React and Knex.",
      },
      {
        type: "detail",
        text: "Designed and built a public site for downloading resources for church leaders",
      },
      {
        type: "detail",
        text: "Oversaw site maintainence, bug fixes, and feature additions for 12stone.com",
      },
    ],
    technology: [
      "React",
      "NodeJS",
      "SQL",
      "GraphQL",
      "NextJS",
      "Docusaurus",
      "React Native",
      "Knex",
      "Material UI",
      "Tailwind",
      "Bootstrap",
      "Bulma",
    ],
  },
  {
    title: "Teaching Assistant",
    company: "Georgia Tech Coding Bootcamp",
    date: " 2018 - 2019",
    url: "https://pe.gatech.edu/programs/boot-camps",
    description: [
      {
        type: "summary",
        text: "Assisted students in learning full stack web development technologies, including HTML, CSS, JavaScript, Node.js, Express, MySQL, and React.",
      },
    ],
    technology: [],
  },
];
---

<FullScreenLayout title="About">
  <div class="container">
    <section class="about-me">
      <div class="flex flex-col gap-2">
        <h1>Clayton Ingalls</h1>
        <h2 class="highlight">Web Developer</h2>
      </div>
      <div class="flex flex-col gap-4">
        <p>
          I build interactive, responsive web applications using modern web
          technologies.
        </p>
        <p>
          I have a particular interest in React having worked with it daily
          since 2018.
        </p>
      </div>

      <nav class="about-nav" aria-label="navigation for about page">
        <ul>
          <li>
            <a href="#origin" class="nav-link active"
              ><div class="bullet"></div>Origin Story</a
            >
          </li>
          <li>
            <a href="#roles" class="nav-link"><div class="bullet"></div>Roles</a
            >
          </li>
          <li>
            <a href="#volunteer" class="nav-link"
              ><div class="bullet"></div>Volunteer</a
            >
          </li>
          <li>
            <a href="#projects" class="nav-link"
              ><div class="bullet"></div>Projects</a
            >
          </li>
        </ul>
      </nav>
    </section>

    <section class="history">
      <div id="origin" class="history-section">
        <h2>Origin Story</h2>
        <p>
          Although I built my first website on Geocities in 1996, it wasn't
          until after a career in ministry that I decided to pursue a long time
          dream to truly learn to code.
        </p>
        <p>
          Using FreeCodeCamp and other online resources, I learned the skills I
          needed to land my first developer job and learned that I do indeed
          love being a developer.
        </p>
        <p>
          My main focus these days is building new features for Flocknote's
          church management software.
        </p>
      </div>

      <div id="roles" class="history-section">
        <h2>Roles</h2>
        <ul class="roles">
          {
            roles.map(
              ({ title, company, date, description, technology, url }) => (
                <li class="role">
                  <div class="date">{date}</div>
                  <div class="role-details">
                    <h3>
                      <a href={url} target="_blank">
                        {title} â€¢ {company}
                      </a>
                    </h3>
                    <ul class="role-description">
                      {description?.map((desc) => {
                        if (desc.type === "summary") {
                          console.log(desc);
                          return <p>{desc.text}</p>;
                        }
                        return <li>{desc.text}</li>;
                      })}
                    </ul>
                    <ul class="tech-list">
                      {technology?.map((tech) => (
                        <li>{tech}</li>
                      ))}
                    </ul>
                  </div>
                </li>
              )
            )
          }
        </ul>
      </div>

      <div id="volunteer" class="history-section">
        <h2>Volunteer</h2>
        <p>I've volunteered since 2022 with Refcode.</p>
      </div>

      <div id="projects" class="history-section">
        <h2>Projects</h2>
      </div>
    </section>
  </div>
</FullScreenLayout>

<style>
  .container {
    position: relative;
    display: grid;
    gap: 6rem;
    margin: 0 auto;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: 600;
  }

  p {
    line-height: 2rem;
  }

  .about-me {
    align-self: start;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding-block-start: 10rem;

    h2 {
      font-size: 1.75rem;
      position: relative;
      display: inline-block;
      padding-inline-end: 3rem;
    }

    p {
      color: #d2c6e1;
    }
  }

  .about-nav {
    display: none;
  }

  nav ul {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    margin-block-start: 2.5rem;
  }
  .nav-link {
    display: flex;
    align-items: center;
    gap: 1rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 0.9rem;
    color: #d2c6e1;

    & .bullet {
      width: 2rem;
      height: 0.1rem;
      background-color: #d2c6e1;
      transition: all 0.3s ease;
    }
    &.active {
      font-weight: 600;
      color: #fff;

      .bullet {
        width: 4rem;
        height: 0.2rem;
        background-color: #fff;
      }
    }
  }
  .nav-link.active {
    font-weight: 600;
  }

  .history {
    padding-block-end: 20rem;
    display: grid;
    gap: 5rem;
  }
  .history-section {
    display: grid;
    gap: 1rem;

    h2 {
      font-size: 1.25rem;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    p {
      color: #d2c6e1;
    }
  }

  .roles {
    display: grid;
    gap: 2rem;

    .role {
      display: grid;

      .date {
        color: #d2c6e1;
        text-transform: uppercase;
        font-size: 1rem;
      }

      .role-details {
        display: grid;
        gap: 1rem;

        .role-description {
          display: grid;
          gap: 0.75rem;

          p,
          li {
            font-size: 1.1rem;
            line-height: 1.5rem;
            color: #d2c6e1;
          }
        }
      }
    }
  }

  .tech-list {
    display: flex;
    gap: 0.5rem 0.75rem;
    flex-wrap: wrap;

    li {
      display: inline-block;
      background-color: hsl(0 0% 100% / 0.1);
      padding: 0.25rem 1rem;
      border-radius: 50px;
      color: #d8bbfe;
      font-size: 0.8rem;
    }
  }

  .highlight::after {
    content: "";
    position: absolute;
    bottom: -8px;
    left: 0;
    height: 5px;
    animation-name: grow;
    animation-duration: 0.5s;
    animation-timing-function: ease-out;
    animation-delay: 0.5s;
    animation-fill-mode: forwards;
  }

  @keyframes grow {
    from {
      width: 0%;
      background: #ff5d5d;
    }

    to {
      width: 60%;
      background: #ff5d5d;
    }
  }

  @media screen and (min-width: 1024px) {
    .container {
      grid-template-columns: 1fr 1.1fr;
      max-width: clamp(800px, 80%, 1024px);
    }

    .about-nav {
      display: block;
    }

    .about-me {
      position: sticky;
      top: 0;

      p {
        max-width: 450px;
      }
    }

    .history {
      padding-block-start: 10rem;
    }
  }

  @media screen and (min-width: 1280px) {
    .container {
      max-width: 1024px;
    }
    .role {
      grid-template-columns: 135px 1fr;
    }
  }
</style>

<script>
  function handleScroll() {
    let main = document.querySelector("main");
    if (!main) return;

    main.addEventListener("scroll", function () {
      const top = main.scrollTop;
      const sections: NodeListOf<HTMLElement> =
        document.querySelectorAll(".history-section");
      const navLinks = document.querySelectorAll(".nav-link");

      let currentSection = "";

      sections?.forEach((section) => {
        const sectionTop = section.offsetTop;
        if (top >= sectionTop - 350) {
          currentSection = section.getAttribute("id") || "";
        }
      });

      navLinks.forEach((link) => {
        link.classList.remove("active");
        if (link.getAttribute("href") === `#${currentSection}`) {
          link.classList.add("active");
        }
      });
    });
  }

  handleScroll();
</script>
